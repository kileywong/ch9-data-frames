install.packages(stringr)
install.packages("stringr")
my_age <- 20
my_name <- "Kiley"
minutes_in_a_day <- 60*1
hours_in_a_year <- 24 * 365
more_minutes_than_hours <- minutes_in_a_day > hours_in_a_year
make_introduction <- function(name, age)
introduction <- paste("Hello, my name is", name, "and I'm ", age, " years old.")
return(introduction)
my_intro <- make_introduction(my_name, my_age)
casual_intro <- gsub("Hey, I'm", "Hello, my name is ", my_intro)
casual_intro <- gsub("Hello, my name is ", "Hey, I'm", my_intro)
casual_intro <- gsub("Hello, my name is ", "Hey, I'm ", my_intro)
loud_intro <- toupper(my_intro)
quiet_intro <- tolower(my_intro)
capitalized <- str_to_title(my_intro)
occurrences <- str_count(my_intro)
install.packages("stringr")
capitalized <- str_to_title(my_intro)
library(stringr)
capitalized <- str_to_title(my_intro)
minutes_in_two_days <- double(minutes_in_a_day)
print(minutes_in_two_days)
minutes_in_two_days <- double(60)
minutes_in_two_days <- double(60)
print(minutes_in_two_days)
double <- function(value)
value <- value * 2
minutes_in_two_days <- double(60)
cube <- function(value)
value <- value * value *value
twenty_seven <- cube(3)
movies <- c("Harry Potter", "Pitch Perfect", "Live Free Die Hard", "Black Panther", "The Proposal", "Grease")
top_three <- movies[c(1, 2:3)]
excited <- paste(movies, " is a great movie!")
without_four <- movies[-4]
numbers <- 700:999
len <- length(numbers)
v
numbers_mean <- mean(numbers)
numbers_median <- median(numbers)
all_numbers <- c(lower_numbers, numbers)
lower_numbers <- 500:699
all_numbers <- c(lower_numbers, numbers)
today <- Sys.Date()
summer_break <- as.Date(c("2018-06-08"))
days_to_break <- summer_break - today
summer_break <- as.Date(2018-06-08)
summer_break <- as.Date("2018-06-08")
days_to_break <- summer_break - today
print(days_to_break)
make_birthday_intro <- function(name, age, brithday)
N <- birthday - today
age <- age + 1
character <- paste(make_introduction(name,age), "In ", N, "days I'll be ", age)
make_birthday_intro <- function(name, age, brithday) {
N <- birthday - today
age <- age + 1
character <- paste("In ", N, "days I'll be ", age)
}
print(make_introduction(name, age), make_birthday_intro(name, age, birthday))
make_birthday_intro <- function(name, age, brithday) {
N <- birthday - today
new_age <- age + 1
characters <- paste("In ", N, "days I'll be ", age)
birthday_intro <- c(make_introduction(name, age), characters(N, new_age))
}
my_bday_intro <- make_birthday_intro(my_name, my_age, 11-25-2018)
my_bday_intro <- make_birthday_intro(my_name, my_age, "11-25-2018")
make_birthday_intro <- function(name, age, "11-25-2018") {
print(birthday)
N <- birthday - today
new_age <- age + 1
characters <- paste("In ", N, "days I'll be ", age)
birthday_intro <- c(make_introduction(name, age), characters(N, new_age))
}
make_birthday_intro <- function(name, age, birthday) {
print(birthday)
N <- birthday - today
new_age <- age + 1
characters <- paste("In ", N, "days I'll be ", age)
birthday_intro <- c(make_introduction(name, age), characters(N, new_age))
}
my_bday_intro <- make_birthday_intro(my_name, my_age, "11-25-2018")
my_bday_intro <- make_birthday_intro(my_name, my_age, "2018-11-25")
my_bday_intro <- make_birthday_intro(my_name, my_age, "2018-11-25")
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
make_birthday_intro <- function(name, age, birthday) {
n <- birthday - today
new_age <- age + 1
characters <- paste("In ", n, "days I'll be ", age)
birthday_intro <- c(make_introduction(name, age), characters(n, new_age))
}
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
make_birthday_intro <- function(name, age, birthday) {
n <- birthday - today
new_age <- age + 1
time_till <- paste("In ", n, "days I'll be ", age)
birthday_intro <- c(make_introduction(name, age), time_till(n, new_age))
}
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
make_birthday_intro <- function(name, age, birthday) {
n <- birthday - today
new_age <- age + 1
time_till <- paste("In ", n, "days I'll be ", age)
birthday_intro <- c(make_introduction(name, age), time_till)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
make_birthday_intro <- function(name, age, birthday) {
n <- birthday - today
new_age <- age + 1
time_till <- paste("In ", n, "days I'll be ", new_age)
birthday_intro <- c(make_introduction(name, age), time_till)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
make_birthday_intro <- function(name, age, birthday) {
n <- birthday - today
new_age <- age + 1
time_till <- paste("In ", n, "days I'll be ", new_age)
birthday_intro <- c(make_introduction(name, age), time_till)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
make_birthday_intro <- function(name, age, birthday) {
n <- birthday - today
new_age <- age + 1
time_till <- paste("In ", n, "days I'll be ", new_age)
birthday_intro <- paste(make_introduction(name, age), time_till)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, as.Date("2018-11-25"))
remove_digits <- gsub('[0-9]')
remove_digits <- gsub('[0:9]')
remove_digits <- gsub([0:9]+)
remove_digits <- gsub([0-9]+)
remove_digits <- gsub[0-9]+
remove_digits(c("INFO 201", "CSE 142"))
remove_digits <- function(digits)
digits <- gsub[0-9]+
remove_digits <- function(digits)
digits <- gsub[0-9]+
remove_digits(c("INFO 201", "CSE 142"))
print(remove_digits(c("INFO 201", "CSE 142")))
remove_digits <- function(digits) {
new <- gsub("[0-9]+", "", digits)
new
}
remove_digits(c("INFO 201", "CSE 142"))
data("USPersonalExpenditure")
is.data.frame(USPersonalExpenditure)
US_Peronsal_Expenditure <- data("USPersonalExpenditure")
US_Peronsal_Expenditure <- data.frame("USPersonalExpenditure")
colnames(US_Peronsal_Expenditure)
pers_exp <- data.frame("USPersonalExpenditure")
colnames(pers_exp)
rownames(pers_exp)
pers_exp$category <- rownames(pers_exp)
care_1940 <- pers_exp['Personal Care', 'X1940']
pers_exp <- data.frame(USPersonalExpenditure)
colnames(pers_exp)
rownames(pers_exp)
pers_exp$category <- rownames(pers_exp)
care_1940 <- pers_exp['Personal Care', 'X1940']
care_1960 <- pers_exp['Food and Tobacco', 'X1960']
highest_1960 <- pers_exp$category[pers_exp$X1960 == max(pers_exp$X1960)]
lowest_category <- function(year) {
col <- paste('X', year)
pers_exp$category[pers_exp[, col] == min(pers_exp[, col])]
}
lowest <- sapply(seq(1940, 1960, 5), lowest_category)
lowest_category <- function(year) {
col <- paste0('X', year)
pers_exp$category[pers_exp[, col] == min(pers_exp[, col])]
}
lowest <- sapply(seq(1940, 1960, 5), lowest_category)
grants <- read.csv(ata/gates_money.csv)
grants <- read.csv(data/gates_money.csv)
grants <- read.csv(data/gates_money.csv, stringAsFactors = FALSE)
grants <- read.csv("data/gates_money.csv", stringAsFactors = FALSE)
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/ch9-data-frames/exercise-4")
> grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
View(grants)
organization <- grants$organization
is.vector(organization)
mean(grants)
mean_grants <- mean(grants$total_amount)
largest_amt <- max(grants$total_amount)
smallest_amt <- min(grants$total_amount)
largest_received <- organization[grants$total_amount == largest_amt]
smallest_received <- organization[grants$total_amount == smallest_amt]
length(grants$total_amount[grants$start_year == 2010])
